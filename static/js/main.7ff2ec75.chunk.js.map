{"version":3,"sources":["components/navigation/components/nav-item.tsx","components/navigation/components/social-icon.tsx","components/navigation/index.tsx","components/page-container/index.tsx","pages/about/index.tsx","pages/projects/index.tsx","pages/contact/components/field-error-message.tsx","pages/contact/index.tsx","services/api.ts","services/http-client.ts","app.tsx","reportWebVitals.ts","index.tsx"],"names":["NavItem","name","textColorClass","isActive","className","SocialIcon","type","onClick","window","open","Navigation","routes","location","useLocation","map","path","to","pathname","settings","particle","particleCount","color","minSize","maxSize","velocity","directionAngle","directionAngleVariance","minSpeed","maxSpeed","opacity","minOpacity","maxOpacity","opacityTransitionTime","PageContainer","children","About","Projects","FieldErrorMessage","message","charAt","toUpperCase","slice","defaultProps","api","sendEmail","email","instance","post","baseURL","_initializeResponseInterceptor","interceptors","response","use","_handleResponse","handleError","data","error","Promise","reject","this","axios","create","schema","yup","shape","required","from","subject","text","exact","component","useForm","resolver","yupResolver","register","errors","formState","handleSubmit","reset","setError","useMutation","onSuccess","onError","toString","includes","shouldFocus","mutate","isLoading","onSubmit","formattedData","rest","formatSubmitData","htmlFor","id","rows","disabled","queryClient","QueryClient","App","QueryClientProvider","client","RouteComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ff2ec75.chunk.js","sourcesContent":["interface NavItemProps {\n  name: string;\n  isActive: boolean;\n}\n\nconst NavItem = ({ name, isActive }: NavItemProps): JSX.Element => {\n  const textColorClass = isActive ? 'text-tangerine-500' : 'text-black';\n  return (\n    <div\n      className={`relative inline-block my-2 text-3xl font-extrabold ${textColorClass} uppercase cursor-pointer underline-animate transition duration-500 ease-in-out`}\n    >\n      {name}\n    </div>\n  );\n};\n\nexport default NavItem;\n","import { Camera } from 'react-feather';\n\ninterface SocialIconProps {\n  name: string;\n}\n\nconst SocialIcon = ({ name }: SocialIconProps): JSX.Element => {\n  const handleClick = () => {\n    window.open('https://www.google.com', '_blank');\n  };\n  return (\n    <button\n      type=\"button\"\n      className=\"p-2 rounded-full ring-4 ring-tangerine-500 ring-opacity-0 hover:ring-opacity-100 transition duration-500 ease-in-out\"\n    >\n      {name}\n      <Camera onClick={handleClick} />\n    </button>\n  );\n};\n\nexport default SocialIcon;\n","import { Link, useLocation } from 'react-router-dom';\nimport NavItem from './components/nav-item';\nimport SocialIcon from './components/social-icon';\n\ninterface NavigationProps {\n  routes: RouteConfig[];\n}\n\nconst Navigation = ({ routes }: NavigationProps): JSX.Element => {\n  const location = useLocation();\n\n  return (\n    <div className=\"h-full p-4\">\n      <div className=\"mb-12\">\n        <div className=\"inline-block text-4xl font-extrabold text-black uppercase\">\n          tyler\n          <br />\n          schumacher\n        </div>\n      </div>\n      <div>\n        {routes.map(({ name, path }) => (\n          <Link data-testid={`${name}-link`} key={name} to={path}>\n            <NavItem name={name} isActive={location.pathname === path} />\n            <br />\n          </Link>\n        ))}\n      </div>\n      <div>\n        <SocialIcon name=\"marklar\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import { ReactChild, ReactChildren } from 'react';\nimport Particles from 'react-particle-backgrounds';\n\nconst settings: ParticleBackgroundConfig = {\n  particle: {\n    particleCount: 100,\n    color: '#ffb75f',\n    minSize: 2,\n    maxSize: 4,\n  },\n  velocity: {\n    directionAngle: 0,\n    directionAngleVariance: 30,\n    minSpeed: 0.2,\n    maxSpeed: 2,\n  },\n  opacity: {\n    minOpacity: 0,\n    maxOpacity: 0.5,\n    opacityTransitionTime: 5000,\n  },\n};\n\ninterface PageContainerProps {\n  children: ReactChild | ReactChildren;\n}\n\nconst PageContainer = ({ children }: PageContainerProps): JSX.Element => (\n  <>\n    <Particles className=\"absolute z-0\" settings={settings} />\n    <div className=\"relative z-10 h-full\">{children}</div>\n  </>\n);\n\nexport default PageContainer;\n","const About = (): JSX.Element => <h2>About</h2>;\n\nexport default About;\n","const Projects = (): JSX.Element => <h2>Projects</h2>;\n\nexport default Projects;\n","interface Props {\n  message?: string;\n}\n\nconst FieldErrorMessage = ({ message }: Props): JSX.Element => (\n  <p className=\"text-red-400\">\n    {message ? message.charAt(0).toUpperCase() + message.slice(1) : ''}\n  </p>\n);\n\nFieldErrorMessage.defaultProps = {\n  message: '',\n};\n\nexport default FieldErrorMessage;\n","import { useForm, SubmitHandler } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport FieldErrorMessage from './components/field-error-message';\nimport Api from '../../services/api';\n\nconst api = new Api();\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  from: yup.string().email().required(),\n  subject: yup.string().required(),\n  text: yup.string().required(),\n});\n\nconst Contact = (): JSX.Element => {\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n    setError,\n  } = useForm<Email>({\n    resolver: yupResolver(schema),\n  });\n\n  const { mutate, isLoading } = useMutation(api.sendEmail, {\n    onSuccess: () => {\n      reset();\n    },\n    onError: (error: Error) => {\n      if (error.toString().includes('400')) {\n        setError(\n          'from',\n          {\n            type: 'manual',\n            message: 'This email address failed validation',\n          },\n          {\n            shouldFocus: true,\n          },\n        );\n      }\n    },\n  });\n\n  const formatSubmitData = (email: Omit<Email, 'to'>): Omit<Email, 'name'> => {\n    const { name, ...rest } = email;\n    return {\n      ...rest,\n      subject: `${email.name} - ${email.subject}`,\n      to: 'tyler.schumacher@protonmail.com',\n    };\n  };\n\n  const onSubmit: SubmitHandler<Omit<Email, 'to'>> = data => {\n    const formattedData = formatSubmitData(data);\n    return mutate(formattedData);\n  };\n\n  return (\n    <div className=\"flex flex-col justify-center w-full h-full p-6 align-middle\">\n      <div className=\"my-10 text-3xl font-extrabold text-center text-\">\n        Contact Me\n      </div>\n      <form\n        className=\"w-full max-w-4xl mx-auto\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <div className=\"flex flex-wrap mb-6 -mx-3\">\n          <div className=\"w-full px-3 mb-6 md:w-1/2 md:mb-0\">\n            <label\n              className=\"block mb-2 text-base font-bold tracking-wide capitalize \"\n              htmlFor=\"form-first-name\"\n            >\n              name\n              <input\n                {...register('name')}\n                className=\"block w-full px-4 py-3 mt-2 mb-3 leading-tight border border-gray-200 rounded appearance-none transition duration-200 ease-in-out focus:border-tangerine-500 focus:ring-1 focus:ring-tangerine-500 focus:border-none form-input\"\n                id=\"form-first-name\"\n                type=\"text\"\n              />\n            </label>\n            <FieldErrorMessage message={errors.name?.message} />\n          </div>\n          <div className=\"w-full px-3 md:w-1/2\">\n            <label\n              className=\"block mb-2 text-base font-bold tracking-wide capitalize\"\n              htmlFor=\"form-last-name\"\n            >\n              from\n              <input\n                {...register('from')}\n                className=\"block w-full px-4 py-3 mt-2 leading-tight border border-gray-200 rounded appearance-none transition duration-200 ease-in-out focus:border-tangerine-500 focus:ring-1 focus:ring-tangerine-500 focus:border-none form-input\"\n                id=\"form-last-name\"\n                type=\"email\"\n              />\n            </label>\n            <FieldErrorMessage message={errors.from?.message} />\n          </div>\n        </div>\n        <div className=\"flex flex-wrap mb-6 -mx-3\">\n          <div className=\"w-full px-3\">\n            <label\n              className=\"block mb-2 text-base font-bold tracking-wide capitalize\"\n              htmlFor=\"form-subject\"\n            >\n              subject\n              <input\n                {...register('subject')}\n                className=\"block w-full px-4 py-3 mt-2 mb-3 leading-tight border border-gray-200 rounded appearance-none transition duration-200 ease-in-out focus:border-tangerine-500 focus:ring-1 focus:ring-tangerine-500 focus:border-none form-input\"\n                id=\"form-subject\"\n                type=\"text\"\n              />\n            </label>\n            <FieldErrorMessage message={errors.subject?.message} />\n          </div>\n        </div>\n        <div className=\"flex flex-wrap mb-2 -mx-3\">\n          <div className=\"w-full px-3 mb-6\">\n            <label\n              className=\"block mb-2 text-base font-bold capitalize tracking-wid e\"\n              htmlFor=\"form-message\"\n            >\n              message\n              <textarea\n                {...register('text')}\n                id=\"form-message\"\n                className=\"block w-full px-4 py-3 mt-2 leading-tight border border-gray-200 rounded appearance-none resize transition duration-200 ease-in-out focus:border-tangerine-500 focus:ring-1 focus:ring-tangerine-500 focus:border-none form-textarea\"\n                rows={10}\n              />\n            </label>\n            <FieldErrorMessage message={errors.text?.message} />\n          </div>\n        </div>\n        <button\n          disabled={isLoading}\n          type=\"submit\"\n          className=\"float-right w-full px-6 py-3 text-base font-bold text-black rounded-lg focus:border-tangerine-500 focus:ring-1 focus:ring-tangerine-500 focus:border-none bg-tangerine-500 hover:bg-tangerine-600 duration-200\"\n        >\n          {isLoading ? (\n            <div className=\"flex items-center justify-center pr-4\">\n              <div className=\"w-4 h-4 border-b-2 border-gray-900 rounded-full animate-spin\" />\n            </div>\n          ) : (\n            'Send'\n          )}\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default Contact;\n","import { AxiosResponse } from 'axios';\nimport HttpClient from './http-client';\n\nclass Api extends HttpClient {\n  public constructor() {\n    super('https://tyler-schumacher-portfolio-api.herokuapp.com/rest');\n  }\n\n  public sendEmail = (\n    email: Omit<Email, 'name'>,\n  ): Promise<AxiosResponse<Email>> =>\n    this.instance.post<Email>(`/send-email`, email);\n}\n\nexport default Api;\n","import axios, { AxiosInstance, AxiosResponse } from 'axios';\n\nabstract class HttpClient {\n  protected readonly instance: AxiosInstance;\n\n  public constructor(baseURL: string) {\n    this.instance = axios.create({\n      baseURL,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this.handleError,\n    );\n  };\n\n  private _handleResponse = ({ data }: AxiosResponse) => data;\n\n  protected handleError = (error: unknown): Promise<never> =>\n    Promise.reject(error);\n}\n\nexport default HttpClient;\n","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport Navigation from './components/navigation';\nimport PageContainer from './components/page-container';\nimport About from './pages/about/index';\nimport Projects from './pages/projects';\nimport Contact from './pages/contact';\n\nconst routes: RouteConfig[] = [\n  {\n    name: 'about',\n    path: '/',\n    exact: true,\n    component: About,\n  },\n  {\n    name: 'projects',\n    path: '/projects',\n    exact: true,\n    component: Projects,\n  },\n  {\n    name: 'contact',\n    path: '/contact',\n    exact: true,\n    component: Contact,\n  },\n];\n\nconst queryClient = new QueryClient();\n\nconst App = (): JSX.Element => (\n  <QueryClientProvider client={queryClient}>\n    <Router>\n      <div className=\"flex h-full\">\n        <div className=\"border-r-2 border-black w-80 md:col-span-3 lg:col-span-1p\">\n          <Navigation routes={routes} />\n        </div>\n        <div className=\"w-full\">\n          <Switch>\n            {routes.map(({ name, path, exact, component: RouteComponent }) => (\n              <Route key={name} path={path} exact={exact}>\n                <PageContainer>\n                  <RouteComponent />\n                </PageContainer>\n              </Route>\n            ))}\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  </QueryClientProvider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}