{"version":3,"sources":["components/navigation/components/nav-item.tsx","components/navigation/components/social-icon.tsx","components/navigation/index.tsx","components/content-container/index.tsx","hooks/use-on-screen.ts","components/content-section/index.tsx","pages/hero/avatar-hex.png","pages/hero/index.tsx","pages/about/index.tsx","components/button-grid/components/item-button.tsx","components/button-grid/index.tsx","assets/books.png","assets/bass.png","assets/gaming.png","pages/interests/index.tsx","assets/motorcycles.png","assets/motocross.png","assets/snowmobiles.png","pages/projects/index.tsx","pages/skills/index.tsx","assets/linux.png","pages/contact/components/field-error-message.tsx","pages/contact/index.tsx","services/api.ts","services/http-client.ts","app.tsx","reportWebVitals.ts","index.tsx"],"names":["NavItem","name","textColorClass","isActive","className","SocialIcon","handleClick","window","open","icons","gitHub","onClick","linkedin","type","Navigation","routes","location","useLocation","map","path","smooth","to","hash","settings","particle","particleCount","color","minSize","maxSize","velocity","directionAngle","directionAngleVariance","minSpeed","maxSpeed","opacity","minOpacity","maxOpacity","opacityTransitionTime","ContentContainer","children","useOnScreen","ref","rootMargin","useState","isIntersecting","setIntersecting","useEffect","observer","IntersectionObserver","entry","current","observe","unobserve","ContentSection","id","hashRoute","useRef","onScreen","history","useHistory","useLayoutEffect","includes","push","Hero","src","avatar","alt","About","SkillButton","item","title","link","image","ButtonGrid","items","skills","Books","Bass","Gaming","Interests","Projects","Skills","FieldErrorMessage","message","charAt","toUpperCase","slice","defaultProps","api","sendEmail","email","instance","post","baseURL","_initializeResponseInterceptor","interceptors","response","use","_handleResponse","handleError","data","error","Promise","reject","this","axios","create","schema","yup","shape","required","subject","text","Contact","useForm","resolver","yupResolver","register","errors","formState","handleSubmit","reset","setError","useMutation","onSuccess","toast","success","position","onError","toString","shouldFocus","mutate","isLoading","onSubmit","formattedData","emailData","rest","from","formatSubmitData","htmlFor","rows","disabled","component","queryClient","QueryClient","App","client","RouteComponent","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8bce958.chunk.js","sourcesContent":["interface NavItemProps {\n  name: string;\n  isActive: boolean;\n}\n\nconst NavItem = ({ name, isActive }: NavItemProps): JSX.Element => {\n  const textColorClass = isActive ? 'text-tangerine-500' : 'text-white';\n  return (\n    <div\n      className={`relative inline-block my-2 text-3xl font-extrabold ${textColorClass} uppercase cursor-pointer underline-animate transition duration-500 ease-in-out`}\n    >\n      {name}\n    </div>\n  );\n};\n\nexport default NavItem;\n","import { GitHub, Linkedin } from 'react-feather';\n\ntype SocialIconName = 'gitHub' | 'linkedin';\n\ninterface SocialIconProps {\n  name: SocialIconName;\n}\n\nconst SocialIcon = ({ name }: SocialIconProps): JSX.Element => {\n  const handleClick = () => {\n    window.open('https://www.google.com', '_blank');\n  };\n\n  const icons: Record<SocialIconName, JSX.Element> = {\n    gitHub: <GitHub onClick={handleClick} />,\n    linkedin: <Linkedin onClick={handleClick} />,\n  };\n\n  return (\n    <button\n      name={name}\n      type=\"button\"\n      className=\"p-2 rounded-full ring-4 ring-tangerine-500 ring-opacity-0 hover:ring-opacity-100 transition duration-500 ease-in-out\"\n    >\n      {icons[name]}\n    </button>\n  );\n};\n\nexport default SocialIcon;\n","import { useLocation } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\nimport NavItem from './components/nav-item';\nimport SocialIcon from './components/social-icon';\n\ninterface NavigationProps {\n  routes: RouteConfig[];\n}\n\nconst Navigation = ({ routes }: NavigationProps): JSX.Element => {\n  const location = useLocation();\n\n  return (\n    <div className=\"flex flex-col justify-between h-full p-4 bg-blue-500\">\n      <div>\n        <div className=\"mb-12\">\n          <div className=\"inline-block text-4xl font-extrabold text-white uppercase\">\n            tyler\n            <br />\n            schumacher\n          </div>\n        </div>\n        <div>\n          {routes.map(({ name, path }) => (\n            <HashLink data-testid={`${name}-link`} smooth key={name} to={path}>\n              <NavItem name={name} isActive={location.hash === path} />\n              <br />\n            </HashLink>\n          ))}\n        </div>\n      </div>\n      <div>\n        <SocialIcon name=\"gitHub\" />\n        <SocialIcon name=\"linkedin\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import Particles from 'react-particle-backgrounds';\n\nconst settings: ParticleBackgroundConfig = {\n  particle: {\n    particleCount: 100,\n    color: '#ffb75f',\n    minSize: 2,\n    maxSize: 4,\n  },\n  velocity: {\n    directionAngle: 0,\n    directionAngleVariance: 30,\n    minSpeed: 0.2,\n    maxSpeed: 2,\n  },\n  opacity: {\n    minOpacity: 0,\n    maxOpacity: 0.5,\n    opacityTransitionTime: 5000,\n  },\n};\n\ninterface Props {\n  children: JSX.Element | JSX.Element[];\n}\n\nconst ContentContainer = ({ children }: Props): JSX.Element => (\n  <div className=\"w-full overflow-auto\">\n    <Particles className=\"absolute z-0\" settings={settings} />\n    <div className=\"relative w-full\">\n      <div className=\"w-full p-4 mx-auto max-w-screen-lg\">\n        <div className=\"relative z-10 h-full\">{children}</div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default ContentContainer;\n","import { MutableRefObject, useEffect, useState } from 'react';\n\nconst useOnScreen = <T extends Element>(\n  ref: MutableRefObject<T> | undefined,\n  rootMargin = '0px',\n): boolean => {\n  const [isIntersecting, setIntersecting] = useState<boolean>(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        setIntersecting(entry.isIntersecting);\n      },\n      {\n        rootMargin,\n      },\n    );\n    if (ref?.current) {\n      observer.observe(ref.current);\n    }\n    return () => {\n      if (ref?.current) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        observer.unobserve(ref.current);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return isIntersecting;\n};\n\nexport default useOnScreen;\n","import { useRef, MutableRefObject, useState, useLayoutEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Location } from 'history';\nimport useOnScreen from '../../hooks/use-on-screen';\n\ninterface Props {\n  children: JSX.Element | JSX.Element[];\n  name: string;\n  id: string;\n}\n\nconst ContentSection = ({ children, name, id }: Props): JSX.Element => {\n  const [hashRoute] = useState(`#${name}`);\n  const ref = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement>;\n  const onScreen = useOnScreen<HTMLDivElement>(ref);\n  const location = useLocation<Location>();\n  const history = useHistory();\n\n  useLayoutEffect(() => {\n    if (onScreen && location.hash.includes(hashRoute)) {\n      history.push(hashRoute);\n    } else if (onScreen && !location.hash) {\n      history.push(hashRoute);\n    } else if (!onScreen && location.hash.includes(hashRoute)) {\n      history.push('/');\n    }\n  }, [hashRoute, history, location.hash, onScreen]);\n\n  return (\n    <div id={id} className=\"flex flex-col items-center  mb-80\">\n      <div ref={ref} className=\"w-full mb-10\">\n        <div className=\"h-1 w-9 bg-tangerine-500\" />\n        <div className=\"text-2xl font-extrabold text-black uppercase\">\n          {name}\n        </div>\n      </div>\n      <div className=\"w-full p-6 text-black bg-white shadow-xl rounded-xl\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default ContentSection;\n","export default __webpack_public_path__ + \"static/media/avatar-hex.ed80e090.png\";","// import { Radar } from 'react-chartjs-2';\n\nimport avatar from './avatar-hex.png';\n\nconst Hero = (): JSX.Element => (\n  <div className=\"h-screen grid grid-cols-1 lg:grid-cols-6 sm:grid-cols-1 md:gap-0 lg:gap-12\">\n    <div className=\"flex items-center col-span-2\">\n      <img\n        src={avatar}\n        alt=\"Tyler Schumacher\"\n        className=\"flex items-center justify-center mx-auto\"\n      />\n    </div>\n    <div className=\"flex flex-col justify-center text-black col-span-4\">\n      <div className=\"mb-4 text-3xl\">\n        Hello there, I am{' '}\n        <span className=\"text-tangerine-500\">Tyler Schumacher</span>\n      </div>\n      <p className=\"mb-2 text-xl \">\n        I&apos;m a{' '}\n        <span className=\"text-tangerine-500\">full stack web developer </span>\n        passionate about creating beautiful UIs, intuitive UX patterns, and\n        scalable backends.\n      </p>\n    </div>\n  </div>\n);\n\nexport default Hero;\n","const About = (): JSX.Element => (\n  <div className=\"text-lg\">\n    I&apos;m a front-end web developer with a background in computer systems and\n    network infrastructure. My 8 years of IT experience has given me a strong\n    foundation for web development and building complex solutions. Recently, I\n    graduated from the Juno College Immersive Web Development Bootcamp. I am\n    passionate about coding and solving problems through code, and I am excited\n    to work alongside other amazing programmers and learn so much more!\n  </div>\n);\n\nexport default About;\n","interface Props {\n  item: ButtonGridItem;\n}\n\nconst SkillButton = ({ item }: Props): JSX.Element => {\n  const handleClick = (link: string) => {\n    window.open(link, '_blank');\n  };\n\n  return (\n    <button\n      title={item.name}\n      className=\"flex flex-col items-center justify-around p-3 text-center bg-gray-100 border-2 border-gray-300 rounded-xl hover:bg-tangerine-500 transition duration-500 ease-in-out\"\n      type=\"button\"\n      onClick={() => handleClick(item.link)}\n    >\n      <img className=\"w-12 pb-2\" src={item.image} alt={item.name} />\n      <span className=\"font-bold\">{item.name}</span>\n    </button>\n  );\n};\n\nexport default SkillButton;\n","import SkillButton from './components/item-button';\n\ninterface Props {\n  items: ButtonGridItem[];\n}\n\nconst ButtonGrid = ({ items }: Props): JSX.Element => {\n  return (\n    <div className=\"container mx-auto\">\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-6\">\n        {items.map(item => (\n          <SkillButton key={item.name} item={item} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ButtonGrid;\n","export default __webpack_public_path__ + \"static/media/books.426ae468.png\";","export default __webpack_public_path__ + \"static/media/bass.ab19fa38.png\";","export default __webpack_public_path__ + \"static/media/gaming.5bcde3b4.png\";","import ButtonGrid from '../../components/button-grid';\nimport Books from '../../assets/books.png';\nimport Bass from '../../assets/bass.png';\nimport Gaming from '../../assets/gaming.png';\nimport Motorcycles from '../../assets/motorcycles.png';\nimport Motocross from '../../assets/motocross.png';\nimport Snowmobiles from '../../assets/snowmobiles.png';\n\nconst skills: ButtonGridItem[] = [\n  {\n    name: 'Books',\n    image: Books,\n    link: 'https://en.wikipedia.org/wiki/Book',\n  },\n  {\n    name: 'Bass Guitar',\n    image: Bass,\n    link: 'https://en.wikipedia.org/wiki/Bass_guitar',\n  },\n  {\n    name: 'Motorcycles',\n    image: Motorcycles,\n    link: 'https://en.wikipedia.org/wiki/Motorcycle',\n  },\n  {\n    name: 'Motocross',\n    image: Motocross,\n    link: 'https://en.wikipedia.org/wiki/Motocross',\n  },\n  {\n    name: 'Snowmobiles',\n    image: Snowmobiles,\n    link: 'https://en.wikipedia.org/wiki/Snowmobile',\n  },\n  {\n    name: 'Gaming',\n    image: Gaming,\n    link: 'https://en.wikipedia.org/wiki/Video_game',\n  },\n];\n\nconst Interests = (): JSX.Element => <ButtonGrid items={skills} />;\n\nexport default Interests;\n","export default __webpack_public_path__ + \"static/media/motorcycles.58fa965a.png\";","export default __webpack_public_path__ + \"static/media/motocross.41ee39f0.png\";","export default __webpack_public_path__ + \"static/media/snowmobiles.60dd4859.png\";","const Projects = (): JSX.Element => <div>coming soon</div>;\n\nexport default Projects;\n","import ButtonGrid from '../../components/button-grid';\nimport Linux from '../../assets/linux.png';\n\nconst skills: ButtonGridItem[] = [\n  {\n    name: 'HTML5',\n    image: 'https://cdn.worldvectorlogo.com/logos/html-1.svg',\n    link: 'https://developer.mozilla.org/en-US/docs/Glossary/HTML5',\n  },\n  {\n    name: 'CSS3',\n    image: 'https://cdn.worldvectorlogo.com/logos/css-3.svg',\n    link: 'https://w7.pngwing.com/pngs/653/527/png-transparent-white-and-blue-shield-shape-logo-css3-cascading-style-sheets-computer-icons-html-emblem-miscellaneous-blue-angle.png',\n  },\n  {\n    name: 'Typescript',\n    image: 'https://cdn.worldvectorlogo.com/logos/typescript.svg',\n    link: 'https://www.typescriptlang.org/',\n  },\n  {\n    name: 'React',\n    image: 'https://cdn.worldvectorlogo.com/logos/react-2.svg',\n    link: 'https://reactjs.org/',\n  },\n  {\n    name: 'Sass',\n    image: 'https://cdn.worldvectorlogo.com/logos/sass-1.svg',\n    link: 'https://sass-lang.com/',\n  },\n  {\n    name: 'Tailwind CSS',\n    image: 'https://cdn.worldvectorlogo.com/logos/tailwindcss.svg',\n    link: 'https://tailwindcss.com/',\n  },\n  {\n    name: 'NodeJS',\n    image: 'https://cdn.worldvectorlogo.com/logos/nodejs-icon.svg',\n    link: 'https://nodejs.org/en/',\n  },\n  {\n    name: 'REST API',\n    image:\n      'https://everything1know.files.wordpress.com/2019/09/rest-icon-200x196-1.png',\n    link: 'https://developer.mozilla.org/en-US/docs/Glossary/REST',\n  },\n  {\n    name: 'GraphQL',\n    image: 'https://cdn.worldvectorlogo.com/logos/graphql.svg',\n    link: 'https://graphql.org/',\n  },\n  {\n    name: 'PostgreSQL',\n    image: 'https://cdn.worldvectorlogo.com/logos/postgresql.svg',\n    link: 'https://www.postgresql.org/',\n  },\n  {\n    name: 'MongoDB',\n    image: 'https://cdn.worldvectorlogo.com/logos/mongodb-icon-1.svg',\n    link: 'https://www.mongodb.com/',\n  },\n  {\n    name: 'Elasticsearch',\n    image: 'https://cdn.worldvectorlogo.com/logos/elastic-elasticsearch.svg',\n    link: 'https://www.elastic.co/',\n  },\n  {\n    name: 'Windows',\n    image: 'https://cdn.worldvectorlogo.com/logos/microsoft-windows-22.svg',\n    link: 'https://www.microsoft.com/en-us/windows',\n  },\n  {\n    name: 'Linux',\n    image: Linux,\n    link: 'https://www.linux.org/',\n  },\n  {\n    name: 'Rust',\n    image: 'https://cdn.worldvectorlogo.com/logos/rust.svg',\n    link: 'https://www.rust-lang.org/',\n  },\n  {\n    name: 'React Testing Library',\n    image: 'https://testing-library.com/img/logo-large.png',\n    link: 'https://testing-library.com/',\n  },\n  {\n    name: 'Jest',\n    image: 'https://nx.dev/documentation/latest/shared/jest-logo.png',\n    link: 'https://jestjs.io/',\n  },\n  {\n    name: 'Git',\n    image: 'https://cdn.worldvectorlogo.com/logos/git-icon.svg',\n    link: 'https://git-scm.com/',\n  },\n];\n\nconst Skills = (): JSX.Element => <ButtonGrid items={skills} />;\n\nexport default Skills;\n","export default __webpack_public_path__ + \"static/media/linux.24a26a2e.png\";","interface Props {\n  message?: string;\n}\n\nconst FieldErrorMessage = ({ message }: Props): JSX.Element => (\n  <p className=\"text-red-400\" data-testid=\"field-error-message\">\n    {message ? message.charAt(0).toUpperCase() + message.slice(1) : ''}\n  </p>\n);\n\nFieldErrorMessage.defaultProps = {\n  message: '',\n};\n\nexport default FieldErrorMessage;\n","import { useForm, SubmitHandler } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useMutation } from 'react-query';\nimport * as yup from 'yup';\nimport { toast } from 'react-toastify';\nimport FieldErrorMessage from './components/field-error-message';\nimport Api from '../../services/api';\n\nconst api = new Api();\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().required(),\n  subject: yup.string().required(),\n  text: yup.string().required(),\n});\n\nconst Contact = (): JSX.Element => {\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n    setError,\n  } = useForm<Email>({\n    resolver: yupResolver(schema),\n  });\n\n  const { mutate, isLoading } = useMutation(api.sendEmail, {\n    onSuccess: () => {\n      toast.success('Email sent successfully!', {\n        position: 'bottom-right',\n      });\n      reset();\n    },\n    onError: (error: Error) => {\n      toast.error(error.message, { position: 'bottom-right' });\n      if (error.toString().includes('400')) {\n        setError(\n          'email',\n          {\n            type: 'manual',\n            message: 'This email address failed validation',\n          },\n          {\n            shouldFocus: true,\n          },\n        );\n      }\n    },\n  });\n\n  const formatSubmitData = (\n    emailData: Omit<Email, 'to'>,\n  ): Omit<Email, 'name' | 'email'> => {\n    const { name, email, ...rest } = emailData;\n    return {\n      ...rest,\n      from: email,\n      subject: `${emailData.name} - ${emailData.subject}`,\n      to: 'tyler.schumacher@protonmail.com',\n    };\n  };\n\n  const onSubmit: SubmitHandler<Omit<Email, 'to'>> = data => {\n    const formattedData = formatSubmitData(data);\n    return mutate(formattedData);\n  };\n\n  return (\n    <form\n      className=\"w-full max-w-4xl mx-auto\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <div className=\"flex flex-wrap mb-6 -mx-3\">\n        <div className=\"w-full pr-3 mb-6 md:w-1/2 md:mb-0\">\n          <label\n            className=\"block mb-2 text-base font-bold tracking-wide capitalize\"\n            htmlFor=\"form-name\"\n          >\n            name\n            <input\n              {...register('name')}\n              data-testid=\"form-input-name\"\n              className=\"block w-full py-3 pr-3 mt-2 mb-3 leading-tight text-black border border-gray-200 rounded appearance-none transition duration-200 ease-in-out focus:border-tangerine-500 focus:ring-1 focus:ring-tangerine-500 focus:border-none form-input\"\n              id=\"form-name\"\n              type=\"text\"\n            />\n          </label>\n          {errors.name?.message ? (\n            <FieldErrorMessage message={errors.name.message} />\n          ) : null}\n        </div>\n        <div className=\"w-full pl-3 md:w-1/2\">\n          <label\n            className=\"block mb-2 text-base font-bold tracking-wide capitalize\"\n            htmlFor=\"form-email\"\n          >\n            email\n            <input\n              {...register('email')}\n              data-testid=\"form-input-email\"\n              className=\"block w-full py-3 pl-3 mt-2 leading-tight text-black border border-gray-200 rounded appearance-none transition duration-200 ease-in-out focus:border-tangerine-500 focus:ring-1 focus:ring-tangerine-500 focus:border-none form-input\"\n              id=\"form-email\"\n              type=\"email\"\n            />\n          </label>\n          {errors.email?.message ? (\n            <FieldErrorMessage message={errors.email.message} />\n          ) : null}\n        </div>\n      </div>\n      <div className=\"flex flex-wrap mb-6 -mx-3\">\n        <div className=\"w-full\">\n          <label\n            className=\"block mb-2 text-base font-bold tracking-wide capitalize\"\n            htmlFor=\"form-subject\"\n          >\n            subject\n            <input\n              {...register('subject')}\n              data-testid=\"form-input-subject\"\n              className=\"block w-full py-3 mt-2 mb-3 leading-tight text-black border border-gray-200 rounded appearance-none transition duration-200 ease-in-out focus:border-tangerine-500 focus:ring-1 focus:ring-tangerine-500 focus:border-none form-input\"\n              id=\"form-subject\"\n              type=\"text\"\n            />\n          </label>\n          {errors.subject?.message ? (\n            <FieldErrorMessage message={errors.subject.message} />\n          ) : null}\n        </div>\n      </div>\n      <div className=\"flex flex-wrap mb-2 -mx-3\">\n        <div className=\"w-full mb-6\">\n          <label\n            className=\"block mb-2 text-base font-bold capitalize tracking-wid e\"\n            htmlFor=\"form-message\"\n          >\n            message\n            <textarea\n              {...register('text')}\n              data-testid=\"form-input-message\"\n              id=\"form-message\"\n              className=\"block w-full py-3 mt-2 leading-tight text-black border border-gray-200 rounded appearance-none resize transition duration-200 ease-in-out focus:border-tangerine-500 focus:ring-1 focus:ring-tangerine-500 focus:border-none form-textarea\"\n              rows={10}\n            />\n          </label>\n          {errors.text?.message ? (\n            <FieldErrorMessage message={errors.text.message} />\n          ) : null}\n        </div>\n      </div>\n      <button\n        data-testid=\"form-submit-button\"\n        disabled={isLoading}\n        type=\"submit\"\n        className=\"float-right w-full px-6 py-3 text-base font-bold text-white rounded-lg focus:border-tangerine-500 focus:ring-1 focus:ring-tangerine-500 focus:border-none bg-tangerine-500 hover:bg-tangerine-600 duration-200\"\n      >\n        {isLoading ? (\n          <div className=\"flex items-center justify-center pr-4\">\n            <div className=\"w-4 h-4 border-b-2 border-gray-900 rounded-full animate-spin\" />\n          </div>\n        ) : (\n          'Send'\n        )}\n      </button>\n    </form>\n  );\n};\nexport default Contact;\n","import { AxiosResponse } from 'axios';\nimport HttpClient from './http-client';\n\nclass Api extends HttpClient {\n  public constructor() {\n    super('https://tyler-schumacher-portfolio-api.herokuapp.com/rest');\n  }\n\n  public sendEmail = (\n    email: Omit<Email, 'name' | 'email'>,\n  ): Promise<AxiosResponse<Email>> =>\n    this.instance.post<Email>(`/send-email`, email);\n}\n\nexport default Api;\n","import axios, { AxiosInstance, AxiosResponse } from 'axios';\n\nabstract class HttpClient {\n  protected readonly instance: AxiosInstance;\n\n  public constructor(baseURL: string) {\n    this.instance = axios.create({\n      baseURL,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this.handleError,\n    );\n  };\n\n  private _handleResponse = ({ data }: AxiosResponse) => data;\n\n  protected handleError = (error: unknown): Promise<never> =>\n    Promise.reject(error);\n}\n\nexport default HttpClient;\n","import { BrowserRouter as Router } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ToastContainer } from 'react-toastify';\n\nimport Navigation from './components/navigation';\nimport ContentContainer from './components/content-container';\nimport ConentSection from './components/content-section';\nimport Hero from './pages/hero/index';\nimport About from './pages/about';\nimport Interests from './pages/interests';\nimport Projects from './pages/projects';\nimport Skills from './pages/skills';\nimport Contact from './pages/contact';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst routes: RouteConfig[] = [\n  {\n    name: 'about',\n    path: '#about',\n    component: About,\n  },\n  {\n    name: 'skills',\n    path: '#skills',\n    component: Skills,\n  },\n  {\n    name: 'interests',\n    path: '#interests',\n    component: Interests,\n  },\n  {\n    name: 'projects',\n    path: '#projects',\n    component: Projects,\n  },\n  {\n    name: 'contact',\n    path: '#contact',\n    component: Contact,\n  },\n];\n\nconst queryClient = new QueryClient();\n\nconst App = (): JSX.Element => (\n  <QueryClientProvider client={queryClient}>\n    <Router>\n      <div className=\"flex h-full\">\n        <Navigation routes={routes} />\n        <ContentContainer>\n          <>\n            <Hero />\n            {routes.map(({ name, path, component: RouteComponent }) => (\n              <ConentSection id={path.replace('#', '')} key={name} name={name}>\n                <RouteComponent />\n              </ConentSection>\n            ))}\n          </>\n        </ContentContainer>\n      </div>\n    </Router>\n    <ToastContainer />\n  </QueryClientProvider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}